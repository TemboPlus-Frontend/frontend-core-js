name: Test and Publish

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: 2.x
      
      - name: Run tests
        run: deno test -A

  publish:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: 2.x
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Get latest version
        id: get_version
        run: |
          CURRENT_VERSION=$(cat deno.json | jq -r '.version')
          LATEST_VERSION=$(npm view @temboplus/afloat version || echo "0.0.0")
          if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
            # Increment patch version
            IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
            NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$((VERSION_PARTS[2] + 1))"
            # Update version in deno.json
            tmp=$(mktemp)
            jq ".version = \"$NEW_VERSION\"" deno.json > "$tmp" && mv "$tmp" deno.json
            echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
          else
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          fi

      - name: Build npm package
        run: deno run -A scripts/build_npm.ts ${{ env.VERSION }}

      - name: Publish to npm
        run: |
          cd npm
          npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}